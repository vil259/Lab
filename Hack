

2

<!DOCTYPE html>
<head>
 <title>Time Table </title>
 <style>
 body {
 font-family: Arial, sans-serif;
 }
 table {
 width: 80%;
 margin: 20px auto;
 border-collapse: collapse;
 }
 th,
 td {
 border: 1px solid #ddd;
 padding: 8px;
 text-align: center;
 }
 th {
 background-color: #f4f4f4;
 color: #333;
 }
 tr:nth-child(even) {
 background-color: #f9f9f9;
 }
 tr:nth-child(odd) {
 background-color: #e6f7ff;
 }
 .lab-hour {
 background-color: #ffcccc;
 }
 .elective-hour {
background-color: #ccffcc;
 }
 .highlight {
 font-weight: bold;
 color: #d63384;
 }
 tfoot {
 background-color: #e0e0e0;
 font-weight: bold;
 }
 </style>
</head>
<body>
 <h1 style="text-align: center;">Time Table</h1>  
 <table>
 <thead>
 <tr>
 <th>Day/Time</th>
 <th>9:00 - 10:00</th>
 <th>10:00 - 11:00</th>
 <th>11:00 - 12:00</th>
 <th>12:00 - 1:00</th>
 <th>Lunch Break</th>
 <th>2:00 - 3:00</th>
 <th>3:00 - 4:00</th>
 </tr>
 </thead>
 <tbody>
 <tr>
 <td>Monday</td>
 <td>AI</td>
 <td>USP</td>
 <td class="lab-hour">Placement Lab</td>
 <td>Elective</td>
 <td rowspan="5" class="highlight">Break</td>
 <td class="lab-hour" colspan=2>Skill Lab</td>
 </tr>
 <tr>
 <td>Tuesday</td>
 <td class="elective-hour">Elective</td>
 <td>CN</td>
 <td>ATC</td>
 <td class="lab-hour">Skill Lab</td>
 <td class="lab-hour" colspan="2">WLLab</td>
</tr>
 <tr>
 <td>Wednesday</td>
 <td class="lab-hour" colspan="2">CN Lab</td>
 <td>ATC</td>
 <td>CN</td>
 <td>AI</td>
 <td class="elective-hour">Elective</td>
 </tr>
 <tr>
 <td>Thursday</td>
 <td>CN</td>
 <td>ATC</td>
 <td>CN</td>
 <td class="elective-hour">Elective</td>
 <td>USP</td>
 <td>AI</td>
 </tr>
<tr>
 <td>Friday</td>
 <td>CN</td>
 <td>AI</td>
 <td>USP</td>
 <td>ATC</td>
 <td class="elective-hour">Elective</td>
 <td>RM</td>
 </tr>
 </tbody>
 <tfoot>
 <tr>
 <td colspan="8">End of Timetable</td>
 </tr>
 </tfoot>
 </table>
</body>
</html>

3

<link rel="stylesheet" href="style.css">
</head>
<body>
 <h2>Main Heading</h2>
 <h3>Subheading</h3>
 <hr>
 <p>This is a paragraph demonstrating the basic text styling applied by CSS.</p>
 <div>
 This is a styled <strong>div</strong> element with padding and a light border. Inside the
div, we can also use
 <span>span elements</span> that have their own styles, like this bold and orange text.
 </div>
 <p>Current time: <time>10:30 AM</time></p>
 <img src="vcet.jpg" alt="Placeholder Image">
 <p>Visit <a href="https://vcetputtur.ac.in">vcetputtur</a> to learn more about our
services.</p>
 <p class="highlight">This paragraph is highlighted with a yellow background.</p>
 <p class="center">This text is centered using a class selector.</p>
 <p id="special-paragraph">This is a special paragraph with unique styles applied through
an ID selector.</p>
</body>
</html>
style.css
* {
 margin: 0;
 padding: 0;
 box-sizing: border-box;
}
h2 {
 color: #2c3e50;
 font-size: 2em;
 margin-bottom: 10px;
}
h3 {
 color: #34495e;
 font-size: 1.5em;
 margin-bottom: 8px;
}
hr {
 border: 0;
 height: 2px;
 background-color: #e74c3c;
 margin: 20px 0;
}
p {
 font-family: 'Arial', sans-serif;
 line-height: 1.6;
 margin: 10px 0;
}
div {
 padding: 15px;
 border: 1px solid #bdc3c7;
 background-color: #ecf0f1;
}
span {
 color: #e67e22;
 font-weight: bold;
}
time::before {
 content: ' ';
⏰
 color: #16a085;
}
img {
 margin-left: 15px;
 height: 300px;
 width: 400px;
 border-radius: 8px;
 box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
 max-width: 100%;
}
a {
 text-decoration: none;
 color: #ea0e4c;
}
a:hover {
 color: #6200ee;
 text-decoration: underline;
}
.highlight {
 background-color: yellow;
 padding: 3px;
}
.center {
 text-align: center;
}
#special-paragraph {
 font-size: 1.2em;
color: #8e44ad;
 background-color: #f5f5f5;
 padding: 10px;
 border-left: 5px solid #8e44ad;
}
h2,
h3,
p {
 margin-left: 20px;
}



4

<!DOCTYPE html>
<html lang="en">
<head>
 <title>Registration Form</title>
 <style>
 body {
 font-family: Arial, sans-serif;
 background-color: #f0f0f0;
 margin: 0;
 padding: 20px;
 }
 h1 {
 color: #333;
 text-align: center;
 }
 table {
 width: 100%;
 max-width: 600px;
 margin: 0 auto;
 background-color: #fff;
 padding: 20px;
 border-radius: 8px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
 td {
 padding: 10px;
 }
 label {
color: #555;
 font-weight: bold;

}
 input[type="text"], input[type="email"], input[type="password"], select, textarea {
 width: 100%;
 padding: 8px;
 border: 1px solid #ddd;
 border-radius: 4px;
 box-sizing: border-box;
 font-size: 16px;
 }
 input[type="radio"], input[type="checkbox"] {
 margin-right: 5px;
 }
 input[type="submit"] {
 background-color: #4CAF50;
 color: white;
 padding: 10px 20px;
 border: none;
 border-radius: 4px;
 cursor: pointer;
 font-size: 18px;
 }
 input[type="reset"] {
 background-color: #FF0000;
 color: white;
 padding: 10px 20px;
 border: none;
 border-radius: 4px;
 cursor: pointer;
 font-size: 18px;
}
 input[type="submit"]:hover {
 background-color: #45a049;
 }
 .error {
 color: #ff0000;
 font-size: 14px;
 }
 </style>
</head>
<body>
 <h1>Registration Form</h1>
 <form action="#" method="post">
 <table>
 <tr>
<td><label for="fullname">Full Name:</label></td>
 <td><input type="text" id="fullname" name="fullname" required></td>
 </tr>
 <tr>
 <td><label for="email">Email:</label></td>
 <td><input type="email" id="email" name="email" required></td>
 </tr>
 <tr>
 <td><label for="password">Password:</label></td>
 <td><input type="password" id="password" name="password" required></td>
 </tr>
 <tr>
 <td><label for="confirm_password">Confirm Password:</label></td>
 <td><input type="password" id="confirm_password" name="confirm_password"
required></td>
 </tr>
 <tr>
 <td><label>Gender:</label></td>
 <td>
 <input type="radio" id="male" name="gender" value="male" required>
 <label for="male">Male</label>
 <input type="radio" id="female" name="gender" value="female" required>
 <label for="female">Female</label>
 <input type="radio" id="other" name="gender" value="other" required>
 <label for="other">Other</label>
 </td>
 </tr>
 <tr>
 <td><label for="birthdate">Date of Birth:</label></td>
 <td><input type="date" id="birthdate" name="birthdate" required></td>
 </tr>
 <tr>
 <td><label for="country">Country:</label></td>
 <td>
 <select id="country" name="country" required>
 <option value="">Select a country</option>
 <option value="usa">India</option>
 <option value="uk">United Kingdom</option>
 <option value="canada">Canada</option>
 <option value="australia">Australia</option>
 <option value="other">Other</option>
 </select>
 </td>
 </tr>
<tr>
 <td><label for="interests">Interests:</label></td>
 <td>
<input type="checkbox" id="sports" name="interests[]" value="sports">
 <label for="sports">Sports</label>
 <input type="checkbox" id="music" name="interests[]" value="music">
 <label for="music">Music</label>
 <input type="checkbox" id="reading" name="interests[]" value="reading">
 <label for="reading">Reading</label>
 <input type="checkbox" id="travel" name="interests[]" value="travel">
 <label for="travel">Travel</label>
 </td>
 </tr>
 <tr>
 <td><label for="bio">Bio:</label></td>
 <td><textarea id="bio" name="bio" rows="4"></textarea></td>
 </tr>
 <tr>
 <td colspan="2" style="text-align: center;">
 <input type="submit" value="Register">
 <input type="reset" value="Reset">
 </td>
 </tr>
 </table>
 </form>
</body>
</html>



5
<!DOCTYPE html>
<html lang="en">
<head>
 <title>The Daily Chronicle</title>
 <style>
 body {
 font-family: 'Georgia', serif;
 line-height: 1.6;
 color: #333;
 max-width: 1200px;
 margin: 0 auto;
 padding: 20px;
 background-color: #f4f4f4;
 }
header {
 background-color: #1a1a1a;
 color: #fff;
 padding: 20px;
 text-align: center;
 }
 header h1 {
 margin: 0;
 font-size: 2.5em;
 }
 nav {
 background-color: #333;
 color: #fff;
 padding: 10px;
 }
 nav ul {
 list-style-type: none;
 padding: 0;
 margin: 0;
 display: flex;
 justify-content: center;
 }
 nav ul li {
 margin: 0 10px;
 }
 nav ul li a {
 color: #fff;
 text-decoration: none;
 }
 main {
 display: flex;
 margin-top: 20px;
 }
 section {
flex: 2;
 margin-right: 20px;
 }
 article {
 background-color: #fff;
 padding: 20px;
 margin-bottom: 20px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
 article h2 {
color: #1a1a1a;
 font-size: 1.8em;
 }
 aside {
flex: 1;
 background-color: #e6e6e6;
 padding: 20px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
figure {
 margin: 0;
 text-align: center;
 }
figure img {
 max-width: 100%;
 height: auto;
 }
figcaption {
 font-style: italic;
 color: #666;
 font-size: 0.9em;
 }
 table {
 width: 100%;
 border-collapse: collapse;
 margin-bottom: 20px;
 }
 th, td {
 border: 1px solid #ddd;
 padding: 10px;
 text-align: left;
 }
 th {
 background-color: #f2f2f2;
 }
 footer {
 background-color: #1a1a1a;
 color: #fff;
 text-align: center;
 padding: 10px;
 margin-top: 20px;
 }
 </style>
</head>
<body>
 <header>
 <h1>The Daily Chronicle</h1>
 </header>
 <nav>
 <ul>
 <li><a href="#">Home</a></li>
 <li><a href="#">Politics</a></li>
 <li><a href="#">Technology</a></li>
 <li><a href="#">Sports</a></li>
 <li><a href="#">Entertainment</a></li>
 </ul>
 </nav>
 <main>
 <section>
 <article>
 <h2>Breaking News: Major Technological Breakthrough</h2>
 <p>Scientists have announced a groundbreaking discovery in the field of quantum
computing, potentially revolutionizing the tech industry.</p>
 <figure>
 <img
src="https://www.cnet.com/a/img/resize/c7cb26e927bebaa784fb55a01e71d7fecb15d2e3/hub/201
9/06/26/3f76e99d-8055-46f3-8f27-558ee276b665/20180405-ibm-q-quantum-computer-
02.jpg?auto=webp&fit=crop&height=675&width=1200" alt="Quantum Computer">
 <figcaption>A state-of-the-art quantum computer at the research facility</figcaption>
 </figure>
 </article>
 <article>
 <h2>Local Sports Team Wins Championship</h2>
 <p>In a thrilling match, our local team secured victory in the national championship,
bringing pride to our city.</p>
 <table>
 <tr>
 <th>Team</th>
 <th>Score</th>
 </tr>
 <tr>
 <td>Local Heroes</td>
 <td>3</td>
 </tr>
 <tr>
 <td>Visiting Challengers</td>
 <td>2</td>
 </tr>
</table>
 </article>
</section>
 <aside>
 <h3>Weather Update</h3>
 <p>Expect sunny skies with a high of 75°F (24°C) today.</p>
 <h3>Upcoming Events</h3>
 <ul>
 <li>City Festival - This Weekend</li>
 <li>Tech Conference - Next Month</li>
 <li>Charity Run - In Two Weeks</li>
 </ul>
 </aside>
 </main>
 <footer>
 <p>&copy; 2023 The Daily Chronicle. All rights reserved.</p>
 </footer>
</body>
</html>



6

<!DOCTYPE html>
<html lang="en">
<head>
 <title>Simple Calculator</title>
 <style>
 body {
 font-family: Arial, sans-serif;
 display: flex;
 justify-content: center;
align-items: center;
 height: 100vh;
 margin: 0;
 background-color: #f0f0f0;
 }
 .calculator {
 background-color: #fff;
 border-radius: 8px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 padding: 20px;
 width: 300px;
 }
 #display {
width: 100%;
 height: 40px;
 font-size: 1.5em;
 text-align: right;
 margin-bottom: 10px;
 padding: 5px;
 box-sizing: border-box;
 }
 .buttons {
 display: grid;
 grid-template-columns: repeat(4, 1fr);
 gap: 10px;
 }
 button {
 padding: 10px;
 font-size: 1.2em;
 border: none;
 background-color: #e0e0e0;
 cursor: pointer;
 border-radius: 4px;
 }
 button:hover {
 background-color: #d0d0d0;
 }
 .operator {
 background-color: #f0a030;
 color: white;
 }
 .operator:hover {
 background-color: #e09020;
 }
 </style>
</head>
<body>
 <div class="calculator">
 <input type="text" id="display" readonly>
 <div class="buttons">
 <button onclick="appendToDisplay('7')">7</button>
 <button onclick="appendToDisplay('8')">8</button>
 <button onclick="appendToDisplay('9')">9</button>
 <button class="operator" onclick="setOperation('+')">&plus;</button>
 <button onclick="appendToDisplay('4')">4</button>
 <button onclick="appendToDisplay('5')">5</button>
 <button onclick="appendToDisplay('6')">6</button>
<button class="operator" onclick="setOperation('-')">&minus;</button>
 <button onclick="appendToDisplay('1')">1</button>
 <button onclick="appendToDisplay('2')">2</button>
 <button onclick="appendToDisplay('3')">3</button>
 <button class="operator" onclick="setOperation('*')">&times;</button>
 <button onclick="appendToDisplay('0')">0</button>
 <button onclick="appendToDisplay('.')">.</button>
 <button class="operator" onclick="calculate()">&equals;</button>
 <button class="operator" onclick="setOperation('/')">&divide;</button>
 <button class="operator" onclick="setOperation('%')">%</button>
 <button class="operator" onclick="setOperation('^')">x<sup>y</sup></button>
 <button class="operator" onclick="squareRoot()">√</button>
 <button class="operator" onclick="square()">x<sup>2</sup></button>
 <button onclick="clearDisplay()">C</button>
 </div>
 </div>
 <script>
 let display = document.getElementById('display');
 let currentValue = '';
 let operation = '';
 let previousValue = '';
 function appendToDisplay(value) {
 currentValue += value;
 display.value = currentValue;
 }
 function clearDisplay() {
 currentValue = '';
 operation = '';
 previousValue = '';
 display.value = '';
 }
 function setOperation(op) {
 if (currentValue !== '') {
 if (previousValue !== '') {
 calculate();
 }
 operation = op;
 previousValue = currentValue;
 currentValue = '';
 }
 }
function calculate() {
 if (previousValue !== '' && currentValue !== '') {
 let result;
const prev = parseFloat(previousValue);
 const current = parseFloat(currentValue);
 switch(operation) {
 case '+':
 result = prev + current;
 break;
 case '-':
 result = prev - current;
 break;
 case '*':
 result = prev * current;
 break;
 case '/':
 result = prev / current;
 break;
 case '%':
 result = prev % current;
 break;
 case '^':
 result = Math.pow(prev, current);
 break;
 }
 display.value = result;
 previousValue = result.toString();
 currentValue = '';
 operation = '';
 }
 }
 function squareRoot() {
 if (currentValue !== '') {
 const result = Math.sqrt(parseFloat(currentValue));
 display.value = result;
 currentValue = result.toString();
 } }
 function square() {
 if (currentValue !== '') {
 const result = Math.pow(parseFloat(currentValue),2);
 display.value = result;
 currentValue = result.toString();
 } }
 </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
 <title>Simple Calculator</title>
 <style>
 body {
 font-family: Arial, sans-serif;
 display: flex;
 justify-content: center;
align-items: center;
 height: 100vh;
 margin: 0;
 background-color: #f0f0f0;
 }
 .calculator {
 background-color: #fff;
 border-radius: 8px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 padding: 20px;
 width: 300px;
 }
 #display {
 width: 100%;
 height: 40px;
 font-size: 1.5em;
 text-align: right;
 margin-bottom: 10px;
 padding: 5px;
 box-sizing: border-box;
 }
 .buttons {
 display: grid;
 grid-template-columns: repeat(4, 1fr);
 gap: 10px;
 }
 button {
 padding: 10px;
 font-size: 1.2em;
 border: none;
 background-color: #e0e0e0;
 cursor: pointer;
 border-radius: 4px;
 }
 button:hover {
background-color: #d0d0d0;
 }
 .operator {
 background-color: #f0a030;
 color: white;
 }
 .operator:hover {
 background-color: #e09020;
 }
 </style>
</head>
<body>
 <div class="calculator">
 <input type="text" id="display" readonly>
 <div class="buttons">
 <button onclick="appendToDisplay('7')">7</button>
<button onclick="appendToDisplay('8')">8</button>
 <button onclick="appendToDisplay('9')">9</button>
 <button class="operator" onclick="setOperation('+')">&plus;</button>
 <button onclick="appendToDisplay('4')">4</button>
 <button onclick="appendToDisplay('5')">5</button>
 <button onclick="appendToDisplay('6')">6</button>
 <button class="operator" onclick="setOperation('-')">&minus;</button>
 <button onclick="appendToDisplay('1')">1</button>
 <button onclick="appendToDisplay('2')">2</button>
 <button onclick="appendToDisplay('3')">3</button>
 <button class="operator" onclick="setOperation('*')">&times;</button>
 <button onclick="appendToDisplay('0')">0</button>
 <button onclick="appendToDisplay('.')">.</button>
 <button class="operator" onclick="calculate()">&equals;</button>
 <button class="operator" onclick="setOperation('/')">&divide;</button>
 <button class="operator" onclick="setOperation('%')">%</button>
 <button class="operator" onclick="setOperation('^')">x<sup>y</sup></button>
 <button class="operator" onclick="squareRoot()">√</button>
 <button class="operator" onclick="square()">x<sup>2</sup></button>
 <button onclick="clearDisplay()">C</button>
 </div>
 </div>
 <script>
 let display = document.getElementById('display');
 let currentValue = '';
 let operation = '';
 let previousValue = '';
 function appendToDisplay(value) {
 currentValue += value;
 display.value = currentValue;

}
 function clearDisplay() {
 currentValue = '';
 operation = '';
 previousValue = '';
 display.value = '';
 }
 function setOperation(op) {
 if (currentValue !== '') {
 if (previousValue !== '') {
 calculate();
 }
 operation = op;
 previousValue = currentValue;
 currentValue = '';
 }
 }
function calculate() {
 if (previousValue !== '' && currentValue !== '') {
 let result;
 const prev = parseFloat(previousValue);
 const current = parseFloat(currentValue);
 switch(operation) {
 case '+':
 result = prev + current;
 break;
 case '-':
 result = prev - current;
 break;
 case '*':
 result = prev * current;
 break;
 case '/':
 result = prev / current;
 break;
 case '%':
 result = prev % current;
 break;
 case '^':
 result = Math.pow(prev, current);
 break;
 }
 display.value = result;
 previousValue = result.toString();
 currentValue = '';
 operation = '';
}
 }
 function squareRoot() {
 if (currentValue !== '') {
 const result = Math.sqrt(parseFloat(currentValue));
 display.value = result;
 currentValue = result.toString();
 }
 }
 function square() {
 if (currentValue !== '') {
 const result = Math.pow(parseFloat(currentValue), 2);
 display.value = result;
 currentValue = result.toString();
 }
 }
 </script>
</body>
</html>







7

<!DOCTYPE html>
<html lang="en">
<head>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>JSON/CSV Converter and Hash Generator</title>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
 <style>
 body {
 font-family: Arial, sans-serif;
 line-height: 1.6;
 margin: 0;
 padding: 20px;
 background-color: #f4f4f4;
 }
 .container {
 max-width: 800px;
 margin: auto;
 background: white;
 padding: 20px;
 border-radius: 5px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
}
 h1 {
 color: #333;
 }
 textarea {
 width: 100%;
 height: 100px;
 margin-bottom: 10px;
 }
 button {
 background-color: #4CAF50;
 color: white;
 padding: 10px 15px;
 border: none;
 border-radius: 4px;
 cursor: pointer;
 margin-right: 10px;
 }
 button:hover {
 background-color: #45a049;
 }
 #result {
margin-top: 20px;
 padding: 10px;
 background-color: #e7e7e7;
 border-radius: 4px;
 }
 </style>
</head>
<body>
 <div class="container">
 <h1>JSON/CSV Converter and Hash Generator</h1>
 <h2>a) Convert JSON to JavaScript Object</h2>
 <textarea id="jsonInput" placeholder="Enter JSON here"></textarea>
 <button onclick="convertJsonToObject()">Convert to Object</button>
 <h2>b) Convert JSON to Date</h2>
 <textarea id="jsonDateInput" placeholder='Enter JSON date string (e.g., {"date": "2023-05-
15T12:00:00Z"})'></textarea>
 <button onclick="convertJsonToDate()">Convert to Date</button>
 <h2>c) Convert JSON to CSV and CSV to JSON</h2>
 <textarea id="dataInput" placeholder="Enter JSON or CSV here"></textarea>
 <button onclick="convertJsonToCsv()">JSON to CSV</button>
 <button onclick="convertCsvToJson()">CSV to JSON</button>
 <h2>d) Create Hash from String</h2>
 <textarea id="hashInput" placeholder="Enter string to hash"></textarea>
 <button onclick="createHash()">Generate Hash</button>
<div id="result"></div>
 </div>
 <script>
 function convertJsonToObject() {
 try {
 const jsonInput = document.getElementById('jsonInput').value;
 const jsObject = JSON.parse(jsonInput);
 document.getElementById('result').innerText = 'Converted Object: ' +
JSON.stringify(jsObject, null, 2);
 } catch (error) {
 document.getElementById('result').innerText = 'Error: ' + error.message;
 }
 }
 function convertJsonToDate() {
 try {
 const jsonInput = document.getElementById('jsonDateInput').value;
 const jsObject = JSON.parse(jsonInput);
 const date = new Date(jsObject.date);
 document.getElementById('result').innerText = 'Converted Date: ' + date.toString();
 } catch (error) {
 document.getElementById('result').innerText = 'Error: ' + error.message;
}
 }
 function convertJsonToCsv() {
 try {
 const jsonInput = document.getElementById('dataInput').value;
 const jsObject = JSON.parse(jsonInput);
 const headers = Object.keys(jsObject[0]);
 const csvRows = [
 headers.join(','),
 ...jsObject.map(row => headers.map(fieldName =>
JSON.stringify(row[fieldName])).join(','))
 ];
 const csvString = csvRows.join('\n');
 document.getElementById('result').innerText = 'Converted CSV:\n' + csvString;
 } catch (error) {
 document.getElementById('result').innerText = 'Error: ' + error.message;
 }}
 function convertCsvToJson() {
 try {
 const csvInput = document.getElementById('dataInput').value;
 const lines = csvInput.split('\n');
 const headers = lines[0].split(',');
 const jsonArray = lines.slice(1).map(line => {
 const values = line.split(',');
 return headers.reduce((obj, header, index) => {
obj[header] = values[index];
 return obj;
 }, {});
 });
 document.getElementById('result').innerText = 'Converted JSON:\n' +
JSON.stringify(jsonArray, null, 2);
 } catch (error) {
 document.getElementById('result').innerText = 'Error: ' + error.message;
 }
 }
 function createHash() {
 try {
 const input = document.getElementById('hashInput').value;
 const hash = CryptoJS.SHA256(input);
 document.getElementById('result').innerText = 'Generated Hash (SHA-256): ' + hash;
 } catch (error) {
 document.getElementById('result').innerText = 'Error: ' + error.message;
 }
 }
 </script>
</body>
</html>


8

<!DOCTYPE html>
<html lang="en">
<head>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>Visitor Counter</title>
 <style>
 body {
 font-family: Arial, sans-serif;
 line-height: 1.6;
 margin: 0;
 padding: 20px;
 background-color: #f4f4f4;
 }
 .container {
 max-width: 600px;
 margin: auto;
 background: white;
 padding: 20px;
 border-radius: 5px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
 h1 {
 color: #333;
 text-align: center;
 }
 .counter {
 font-size: 24px;
text-align: center;
 margin-top: 20px;
 }
 </style>
</head>
<body>
 <div class="container">
 <h1>Welcome to Our Website</h1>
 <div class="counter">
 <?php
 $counterFile = 'counter.txt';
 // Read the current count
 if (file_exists($counterFile)) {
 $count = (int)file_get_contents($counterFile);
} else {
 $count = 0;
 }
 // Increment the count
 $count++;
 // Save the new count
file_put_contents($counterFile, $count);
 // Display the count
 echo "<h2>Visitor Count</h2>";
 echo "<p>You are visitor number: $count</p>";
 ?>
 </div>
 </div>
</body>
</html>


8b

<!DOCTYPE html>
<html lang="en">
<head>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>Student Record Sorter</title>
 <style>
 body {
 font-family: Arial, sans-serif;
 line-height: 1.6;
 margin: 0;
 padding: 20px;
 background-color: #f4f4f4;
 }
 .container {
 max-width: 800px;
 margin: auto;
 background: white;
 padding: 20px;
 border-radius: 5px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
 h1 {
 color: #333;
 text-align: center;
 }
 table {
 width: 100%;
border-collapse: collapse;
 margin-top: 20px;
 }
 th, td {
 padding: 10px;
 border: 1px solid #ddd;
 text-align: left;
 }
 th {
 background-color: #f2f2f2;
 }
 </style>
</head>
<body>
 <div class="container">
 <h1>Student Records</h1>
 <?php
 // Database connection details
 $host = 'localhost';
 $dbname = 'student_records';
 $username = 'root';
 $password = 'vcetputtur';
 try {
 $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
 $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
 // Fetch student records
 $stmt = $pdo->query("SELECT * FROM students");
$students = $stmt->fetchAll(PDO::FETCH_ASSOC);
 // Selection sort function
 function selectionSort(&$arr, $n) {
 for ($i = 0; $i < $n - 1; $i++) {
 $min_idx = $i;
 for ($j = $i + 1; $j < $n; $j++) {
 if ($arr[$j]['gpa'] < $arr[$min_idx]['gpa']) {
 $min_idx = $j;
 }
 }
 if ($min_idx != $i) {
 $temp = $arr[$i];
 $arr[$i] = $arr[$min_idx];
 $arr[$min_idx] = $temp;
 }
 }
 }
 // Sort students by GPA
 selectionSort($students, count($students));
// Display sorted student records
 echo "<table>";
 echo "<tr><th>ID</th><th>Name</th><th>GPA</th></tr>";
 foreach ($students as $student) {
 echo "<tr>";
 echo "<td>" . htmlspecialchars($student['id']) . "</td>";
 echo "<td>" . htmlspecialchars($student['name']) . "</td>";
echo "<td>" . htmlspecialchars($student['gpa']) . "</td>";
 echo "</tr>";
 }
 echo "</table>";
 } catch(PDOException $e) {
 echo "Connection failed: " . $e->getMessage();
 }
 ?>
 </div>
</body>
</html>

9

<!DOCTYPE html>
<html lang="en">
<head>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>jQuery Append, Animate, and Color Change Demo</title>
 <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
 <style>
 body {
 font-family: Arial, sans-serif;
 line-height: 1.6;
 margin: 0;
 padding: 20px;
background-color: #f4f4f4;
 }
 .container {
 max-width: 800px;
 margin: auto;
 background: white;
 padding: 20px;
 border-radius: 5px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
h1, h2 {
 color: #333;
 }
 .box {
 width: 100px;
 height: 100px;
 background-color: #3498db;
 margin: 20px 0;
 }
 button {
 padding: 10px 15px;
 background-color: #2ecc71;
 color: white;
 border: none;
 border-radius: 5px;
 cursor: pointer;
 margin-right: 10px;
 }
 button:hover {
background-color: #27ae60;
 }
 </style>
</head>
<body>
 <div class="container">
 <h1>jQuery Demonstration</h1>
 <h2>a. Append Content</h2>
 <p id="existingParagraph">This is an existing paragraph. </p>
 <ul id="existingList">
 <li>Existing item 1</li>
 <li>Existing item 2</li>
 </ul>
 <button id="appendButton">Append Content</button>
 <h2>b. Animate Element</h2>
 <div id="animateBox" class="box"></div>
 <button id="animateButton">Animate Box</button>
 <h2>c. Change Color of Animated Div</h2>
 <div id="colorBox" class="box"></div>
 <button id="colorAnimateButton">Animate and Change Color</button>
 </div>
 <script>
 $(document).ready(function() {
 // a. Append content
 $("#appendButton").click(function() {
 $("#existingParagraph").append("This content is appended.");
 $("#existingList").append("<li>Appended item</li>");
);
 // b. Animate element
$("#animateButton").click(function() {
 $("#animateBox").animate({
 width: "200px",
 height: "200px",
 opacity: 0.5
 }, 1000);
 });
 // c. Animate and change color
 $("#colorAnimateButton").click(function() {
 $("#colorBox").animate({
 width: "200px",
 height: "200px"
 }, {
 duration: 1000,
 step: function(now, fx) {
 if (fx.prop === "width") {
 $(this).css("background-color", `rgb(${Math.round(now)}, 52, 219)`);
 }
 }
 });
 });
 });
 </script>
</body>
</html>


10

<!DOCTYPE html>
<html lang="en">
<head>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <title>Ajax Demo Program</title>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
 <style>
 body {
 font-family: Arial, sans-serif;
 line-height: 1.6;
 margin: 0;
 padding: 20px;
background-color: #f4f4f4;
 }
 .container {
 max-width: 800px;
 margin: auto;
 background: white;
 padding: 20px;
 border-radius: 5px;
 box-shadow: 0 0 10px rgba(0,0,0,0.1);
 }
 h1 {
 color: #333;
 }
 h2 {
color: #666;
 }
 button {
 background-color: #4CAF50;
 border: none;
 color: white;
 padding: 10px 20px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
 margin: 4px 2px;
 cursor: pointer;
 border-radius: 4px;
 }
 pre {
 background-color: #f8f8f8;
 border: 1px solid #ddd;
 border-radius: 4px;
 padding: 10px;
 white-space: pre-wrap;
 word-wrap: break-word;
 }
 </style>
</head>
<body>
 <div class="container">
 <h1>Ajax Demo Program</h1>
 <h2>a. Ajax-like operation without jQuery</h2>
 <button onclick="operationWithoutJQuery()">Perform Operation (without jQuery)</button>
<pre id="result-a"></pre>
 <h2>b. Ajax-like operation with jQuery</h2>
<button onclick="operationWithJQuery()">Perform Operation (with jQuery)</button>
 <pre id="result-b"></pre>
 <h2>c. jQuery-like getJSON() method</h2>
 <button onclick="getJSONOperation()">Get JSON</button>
 <pre id="result-c"></pre>
 <h2>d. jQuery parseJSON() method</h2>
 <button onclick="parseJSONExample()">Parse JSON</button>
 <pre id="result-d"></pre>
 </div>
 <script>
 // Simulated data
 const simulatedData = {
 text: "This is a sample text from a simulated server response.",
 json: {
 name: "John Doe",
 age: 30,
 city: "New York"
 }
 };
 // a. Ajax-like operation without jQuery
 function operationWithoutJQuery() {
 setTimeout(function() {
 document.getElementById("result-a").textContent = simulatedData.text;
 }, 500);
}
 // b. Ajax-like operation with jQuery
 function operationWithJQuery() {
 $.Deferred(function(deferred) {
 setTimeout(function() {
 deferred.resolve(simulatedData.text);
 }, 500);
 }).done(function(result) {
 $("#result-b").text(result);
 });
 }
 // c. jQuery-like getJSON() method
 function getJSONOperation() {
 $.Deferred(function(deferred) {
 setTimeout(function() {
 deferred.resolve(simulatedData.json);
 }, 500);
 }).done(function(result) {
 $("#result-c").text(JSON.stringify(result, null, 2));
 });
 }
 // d. jQuery parseJSON() method
function parseJSONExample() {
 var jsonString = JSON.stringify(simulatedData.json);
 var jsonObject = $.parseJSON(jsonString);
 $("#result-d").text(JSON.stringify(jsonObject, null, 2));
 }
 </script>
</body>
</html>


